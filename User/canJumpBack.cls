Include %occInclude

/// Generated by TSQL CREATE PROC SQLUser.canJumpBack
Class User.canJumpBack [ Abstract, DdlAllowed, GeneratedBy = %XSQL.StatementBatch.cls, Owner = {UnknownUser} ]
{

ClassMethod canJumpBack(who As %Library.Integer(MAXVAL=2147483647,MINVAL=-2147483648), cell As %Library.String(MAXLEN=2)) As %Library.String [ Language = tsql, SqlName = canJumpBack, SqlProc ]
{

begin
 declare @ret varchar(5), @l1 varchar(2), @r1 varchar(2), @l2 varchar(2), @r2 varchar(2)
 if SQLUser.isCellEmpty(@cell) = 1
  return ''

 select  @ret = '', -- init
  @r1 = SQLUser.nextRight((convert(tinyint,tsql.modulo2(@who)))+1, @cell),
  @l1 = SQLUser.nextLeft((convert(tinyint,tsql.modulo2(@who)))+1, @cell)

 select  @r2 = SQLUser.nextRight(convert(tinyint,(tsql.modulo2(@who)))+1, @r1),
  @l2 = SQLUser.nextLeft((convert(tinyint,tsql.modulo2(@who)))+1, @l1)

 if SQLUser.isCellEmpty(@r2) = 1 and SQLUser.whosin(@r1) = ((convert(tinyint,tsql.modulo2(@who)))+1)
  set @ret = @r2
 else if SQLUser.isCellEmpty(@l2) = 1 and SQLUser.whosin(@l1) = ((convert(tinyint,tsql.modulo2(@who)))+1)
  set @ret = @ret + ' ' + @l2
 
 return rtrim(ltrim(@ret))
end;

go
}

}

