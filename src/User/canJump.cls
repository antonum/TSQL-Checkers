Include %occInclude

/// Generated by TSQL CREATE PROC SQLUser.canJump
Class User.canJump [ Abstract, DdlAllowed, GeneratedBy = %XSQL.StatementBatch.cls, Owner = {UnknownUser} ]
{

ClassMethod canJump(who As %Library.Integer(MAXVAL=2147483647,MINVAL=-2147483648), cell As %Library.String(MAXLEN=2)) As %Library.String [ Language = tsql, SqlName = canJump, SqlProc ]
{

begin
 set @cell=rtrim(rtrim(@cell))
 declare @ret varchar(5), @l1 varchar(2), @r1 varchar(2), @l2 varchar(2), @r2 varchar(2)
 if SQLUser.isCellEmpty(@cell) = 1
  return ''
 select  @ret = '', -- init
  @r1 = SQLUser.nextRight(@who, @cell),
  @l1 = SQLUser.nextLeft(@who, @cell)

 select  @r2 = SQLUser.nextRight(@who, @r1),
  @l2 = SQLUser.nextLeft(@who, @l1)

 --cache {b}
 /*print convert(tinyint,tsql.modulo2(@who))+1
 print SQLUser.whosin(@r1)
 print SQLUser.isCellEmpty(@r2)
 */
 if (SQLUser.isCellEmpty(@r2) = 1) and (SQLUser.whosin(@r1) = (convert(tinyint,tsql.modulo2(@who))+1))
  set @ret = @r2
 else if (SQLUser.isCellEmpty(@l2) = 1) and (SQLUser.whosin(@l1) = (convert(tinyint,tsql.modulo2(@who))+1))
  set @ret = @ret + ' ' + @l2
 return rtrim(ltrim(@ret))
end;

go
}

}

